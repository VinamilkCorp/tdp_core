openapi: 3.0.0
servers:
  - url: /api/tdp/
info:
  version: 2.1.1
  title: Target Discovery Platform API
tags:
  - name: db
    description: database api
  - name: storage
    description: named set storage api
  - name: proxy
    description: proxy api
paths:
  /db/:
    get:
      x-swagger-router-controller: tdp_core
      operationId: sql.list_databases
      description: list all known databases
      tags:
        - db
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                title: ArrayOfDatabases
                type: array
                items:
                  $ref: '#/components/schemas/database'
        '403':
          $ref: '#/components/responses/notAllowed'
  '/db/{database}/':
    parameters:
      - $ref: '#/components/parameters/database'
    get:
      x-swagger-router-controller: tdp_core
      operationId: sql.list_view
      description: list all views of a given database
      tags:
        - db
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                title: ArrayOfViews
                type: array
                items:
                  $ref: '#/components/schemas/view'
        '403':
          $ref: '#/components/responses/notAllowed'
        '404':
          $ref: '#/components/responses/notFound'
  '/db/{database}/{view}':
    parameters:
      - $ref: '#/components/parameters/database'
      - $ref: '#/components/parameters/view'
    get:
      x-swagger-router-controller: tdp_core
      operationId: sql.get_data_api
      description: >-
        execute the view and return the data the arguments depend on the
        definition
      tags:
        - db
      parameters:
        - $ref: '#/components/parameters/_assignids'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                title: ArrayOfRows
                type: array
                items:
                  type: object
                  additionalProperties: true
        '403':
          $ref: '#/components/responses/notAllowed'
        '404':
          $ref: '#/components/responses/notFound'
  '/db/{database}/{view}/filter':
    parameters:
      - $ref: '#/components/parameters/database'
      - $ref: '#/components/parameters/view'
    get:
      x-swagger-router-controller: tdp_core
      operationId: sql.get_filtered_data
      description: see the base version with additional filter possiblities
      tags:
        - db
      parameters:
        - $ref: '#/components/parameters/_assignids'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                title: ArrayOfRows
                type: array
                items:
                  type: object
                  additionalProperties: true
        '403':
          $ref: '#/components/responses/notAllowed'
        '404':
          $ref: '#/components/responses/notFound'
  '/db/{database}/{view}/score':
    parameters:
      - $ref: '#/components/parameters/database'
      - $ref: '#/components/parameters/view'
    get:
      x-swagger-router-controller: tdp_core
      operationId: sql.get_score_data
      description: >-
        see the base version with additional filter possiblities and score
        mapping
      tags:
        - db
      parameters:
        - $ref: '#/components/parameters/_assignids'
        - name: target
          in: query
          required: false
          description: target idtype to map the resulting scores to
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                title: ArrayOfRows
                type: array
                items:
                  type: object
                  additionalProperties: true
        '403':
          $ref: '#/components/responses/notAllowed'
        '404':
          $ref: '#/components/responses/notFound'
  '/db/{database}/{view}/count':
    parameters:
      - $ref: '#/components/parameters/database'
      - $ref: '#/components/parameters/view'
    get:
      x-swagger-router-controller: tdp_core
      operationId: sql.get_count_data
      description: see the base version but returns just the number of results
      tags:
        - db
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                title: number of records
                type: integer
        '403':
          $ref: '#/components/responses/notAllowed'
        '404':
          $ref: '#/components/responses/notFound'
  '/db/{database}/{view}/desc':
    parameters:
      - $ref: '#/components/parameters/database'
      - $ref: '#/components/parameters/view'
    get:
      x-swagger-router-controller: tdp_core
      operationId: sql.get_desc
      description: returns the description information of the given view
      tags:
        - db
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                title: column description
                type: object
                properties:
                  idType:
                    type: string
                    description: the IDType of resulting rows
                  columns:
                    $ref: '#/components/schemas/columns'
        '403':
          $ref: '#/components/responses/notAllowed'
        '404':
          $ref: '#/components/responses/notFound'
  '/db/{database}/{view}/lookup':
    parameters:
      - $ref: '#/components/parameters/database'
      - $ref: '#/components/parameters/view'
    get:
      x-swagger-router-controller: tdp_core
      operationId: sql.lookup
      description: lookups up the given query term using this view
      tags:
        - db
      parameters:
        - $ref: '#/components/parameters/_assignids'
        - name: query
          in: query
          required: true
          description: the search string
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: result page
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          required: false
          description: number of results per page
          schema:
            type: integer
            default: 30
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                title: column description
                type: object
                properties:
                  more:
                    type: boolean
                    description: whether more results exists
                  items:
                    type: object
                    properties:
                      _id:
                        type: integer
                        description: the system wide unique id
                      id:
                        type: string
                        description: the id of the found entry
                      text:
                        type: string
                        description: label that matched the given query
        '403':
          $ref: '#/components/responses/notAllowed'
        '404':
          $ref: '#/components/responses/notFound'
  '/proxy/{site}':
    parameters:
      - name: site
        in: path
        required: true
        description: the site key as defined in the targid_proxy extension point
        schema:
          type: string
    get:
      x-swagger-router-controller: tdp_core
      operationId: proxy.get_details
      description: proxy to another get another website
      tags:
        - proxy
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                title: the proxied website
        '403':
          $ref: '#/components/responses/notAllowed'
        '404':
          $ref: '#/components/responses/notFound'
  /storage/namedsets/:
    get:
      x-swagger-router-controller: tdp_core
      operationId: storage.list_namedset
      description: list or add namedsets
      tags:
        - storage
      parameters:
        - name: idType
          in: query
          required: false
          description: limit list to the given idType
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                title: list of namedsets
                type: array
                items:
                  $ref: '#/components/schemas/namedset'
        '403':
          $ref: '#/components/responses/notAllowed'
        '404':
          $ref: '#/components/responses/notFound'
    post:
      x-swagger-router-controller: tdp_core
      operationId: storage.list_namedset_post
      description: add a new namedset
      tags:
        - storage
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: description
          in: query
          required: false
          schema:
            type: string
        - name: subTypeKey
          in: query
          required: false
          schema:
            type: string
        - name: subTypeValue
          in: query
          required: false
          schema:
            type: string
        - name: type
          in: query
          required: false
          schema:
            type: integer
            default: 0
        - name: creator
          in: query
          required: false
          schema:
            type: string
            default: currently logged in
        - name: permissions
          in: query
          required: false
          schema:
            type: integer
            default: 740
        - name: idType
          in: query
          required: false
          schema:
            type: string
        - name: ids
          in: query
          schema:
            type: string
            format: range
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                title: list of namedsets
                type: array
                items:
                  $ref: '#/components/schemas/namedset'
        '403':
          $ref: '#/components/responses/notAllowed'
        '404':
          $ref: '#/components/responses/notFound'
  '/storage/namedsets/{namedset}':
    parameters:
      - name: namedset
        in: path
        required: true
        schema:
          type: string
    get:
      x-swagger-router-controller: tdp_core
      operationId: storage.get_namedset
      description: get a dataset
      tags:
        - storage
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/namedset'
        '403':
          $ref: '#/components/responses/notAllowed'
        '404':
          $ref: '#/components/responses/notFound'
    delete:
      x-swagger-router-controller: tdp_core
      operationId: storage.get_namedset_delete
      description: deletes the given named set
      tags:
        - storage
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                title: number of removed entries
                type: integer
        '403':
          $ref: '#/components/responses/notAllowed'
        '404':
          $ref: '#/components/responses/notFound'
    put:
      x-swagger-router-controller: tdp_core
      operationId: storage.get_namedset_put
      description: update the given namedset
      tags:
        - storage
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: description
          in: query
          required: false
          schema:
            type: string
        - name: subTypeKey
          in: query
          required: false
          schema:
            type: string
        - name: subTypeValue
          in: query
          required: false
          schema:
            type: string
        - name: type
          in: query
          required: false
          schema:
            type: integer
            default: 0
        - name: permissions
          in: query
          required: false
          schema:
            type: integer
            default: 740
        - name: idType
          in: query
          required: false
          schema:
            type: string
        - name: ids
          in: query
          schema:
            type: string
            format: range
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/namedset'
        '403':
          $ref: '#/components/responses/notAllowed'
        '404':
          $ref: '#/components/responses/notFound'
components:
  parameters:
    database:
      name: database
      description: the database key
      in: path
      required: true
      schema:
        type: string
    view:
      name: view
      description: the view name
      in: path
      required: true
      schema:
        type: string
    _assignids:
      name: _assignids
      in: query
      description: whether the unique ids should be automatically injected in the results
      required: false
      schema:
        type: boolean
        default: false
  responses:
    error:
      description: Internal Server Error
      content:
        application/json:
          schema:
            title: Error
            type: string
    invalid:
      description: Invalid Request
      content:
        application/json:
          schema:
            title: Error
            type: string
    notFound:
      description: Not Found
      content:
        application/json:
          schema:
            title: Error
            type: string
    notAllowed:
      description: 'Not Allowed to perform the operation, are you logged in?'
      content:
        application/json:
          schema:
            title: Error
            type: string
  schemas:
    database:
      type: string
    view:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        arguments:
          type: array
          items:
            type: string
        query:
          type: string
        columns:
          $ref: '#/components/schemas/columns'
        idType:
          type: string
        filters:
          type: array
          items:
            type: string
        queries:
          type: object
          additionalProperties: true
      required:
        - name
        - description
        - arguments
        - query
    columns:
      type: array
      description: list of columns
      items:
        $ref: '#/components/schemas/column'
    column:
      type: object
      properties:
        column:
          type: string
        label:
          type: string
        type:
          type: string
          enum:
            - categorical
            - number
            - string
        min:
          type: number
        max:
          type: number
        categories:
          type: array
          items:
            type: string
      required:
        - column
        - type
        - label
      additionalProperties: true
    namedset:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        type:
          type: number
        creator:
          type: string
        permissions:
          type: integer
        description:
          type: string
        idType:
          type: string
        ids:
          type: array
          items:
            type: integer
        subTypeKey:
          type: string
        subTypeValue:
          type: string
      required:
        - name
        - id
        - type
        - creator
        - permissions
        - description
        - idType
        - ids
        - subTypeKey
        - subTypeValue
