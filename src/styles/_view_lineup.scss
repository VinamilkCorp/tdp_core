@import './vars';
@import '~font-awesome/scss/variables';
@import '~font-awesome/scss/mixins';

&.lineup {
  display: flex;
  flex-direction: row;
  height: 100%;

  .lu-row {
    line-height: 1;
  }

  >div {
    flex: 1 1 auto;
    position: relative;
  }

  &.overview-detail {
    >div {
      display: flex;
      flex-direction: column;

      >header {
        flex: 0 0 auto;
      }

      >div {
        flex: 1 1 auto;
        position: relative;
      }
    }

    header.overview {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      overflow: auto;
    }
  }
}

.lu-dialog {
  label: {
    margin: 0;
  }

  &.lu-filter-table>div:first-of-type>* {
    flex: 0 0 auto;
  }
}

.lu-collapser {
  display: none;
}

.lineup-engine {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  overflow: auto;

  >header {
    padding-bottom: 1px; // no idea otherwise scrollbar
  }

  footer {
    display: block !important;
  }
}

$lu_assets: '~lineupjs/src/assets';

@at-root {

  .tdp-ranking-export-form {
    user-select: none;
    -moz-user-select: none;

    .radio {
      margin-left: 1em;
    }
  }

  .tdp-ranking-export-form-handle {
    >span {
      visibility: hidden;
      padding: 0 0.5em 0 1em;
      cursor: grab;
    }

    &:hover>span,
    &.dragging>span {
      visibility: visible;
    }

    &.dragging {
      border: 1px solid lightgray;
      border-radius: 3px;
      cursor: grabbing;
    }
  }

  .lu-side-panel>main>section::before {
    content: 'Column Summaries';
  }

  .lu-hierarchy .lu-search::before {
    height: 19px;
  }

  .lu-side-panel-wrapper {
    display: flex;
    flex-direction: column;

    %lu-panel-button {
      background: #fff;
      border: 1px solid #ddd;
      padding: 5px 10px;
      cursor: pointer;
      z-index: 1;
      color: #000;

      &:hover {
        background-color: #eaeaea;
      }
    }

    .lu-side-panel>main>section>div {
      flex: 1;
    }

    aside {
      border-left: 0;
    }

    >header {
      margin-bottom: 1em;
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(2.8em, 1fr));

      .lu-adder {
        margin-top: 1em;
        display: none;
      }

      .collapse-button,
      button {
        @extend %lu-panel-button;
        height: 2em;
      }

      button.active {
        color: #ffa500
      }
    }

    label,
    input {
      font-weight: normal;
      margin: 0;
    }

    .lu-adder {
      margin-top: 1em;

      button {
        @extend %lu-panel-button;

        display: none;
      }
    }

    .tab-content {
      display: flex;
      flex-direction: column;
    }

    .collapse-button {
      @extend %lu-panel-button;
      grid-row: 1/3;
      height: 2em;
      margin-right: 0.5em;

      &::before {
        @include fa-icon();
        content: $fa-var-arrow-right;
      }
    }

    button[data-violation] {
      position: relative;
      color: #FFD700;

      &::before {
        content: $fa-var-exclamation-triangle;
      }

      &::after {
        content: attr(data-violation);
        color: black;
        text-align: left;
        background: lighten(#FFD700, 45%);
        hyphens: manual;
        padding: 5px;
        width: 12em;
        position: absolute;
        right: 0;
        top: 100%;
        z-index: 100;
        pointer-events: none;
        opacity: 0;
        display: none;
        transition: visibility 0s ease 0.3s, opacity 0.3s ease 0s;
      }

      &:hover::after {
        opacity: 1;
        display: block;
        transition-delay: 0s, 0.3s;
      }
    }

    .download-data-dropdown {

      // show the number of selected rows after the element
      li[data-num-selected-rows]::after {
        content: ' ('attr(data-num-selected-rows) ')';
        display: inline;
      }

      // hide the dropdown-header and the next list point (= download link), if no rows are selected
      // note that this only works for a *single* link as after the header list item!
      li[data-num-selected-rows='0'],
      li[data-num-selected-rows='0']+li {
        display: none;
      }
    }

    &.collapsed {
      max-width: 3em;
      min-width: 0;
      display: flex;
      flex-direction: column;
      overflow: visible;

      .collapse-button {
        position: relative;
        margin-right: 0;

        &::before {
          content: $fa-var-arrow-left;
        }
      }

      header {
        width: auto;
        flex-direction: column;
        margin-right: 0;
        min-width: 0;
        align-self: flex-start;

        button.active {
          color: unset;
        }
      }

      .tab-content {
        display: none;
      }

      .lu-adder {
        padding: 0;
        display: flex;
        flex-direction: column;
        position: relative;
        border: none;

        &:not(.once) .lu-search {
          display: none;
        }

        button {
          display: block;
        }

        &.once::before {
          content: '';
          top: -30px;
          left: -20em;
          right: 0;
          bottom: -50vh;
          position: absolute;
        }

        &.once .lu-search {
          position: absolute;
          top: 1.8em;
          width: 17.5em;
          left: -15em;
          z-index: 2;

          ul {
            max-height: 50vh;
          }
        }
      }

      .gap {
        margin-top: 1em;
      }
    }
  }


  .lu-side-panel-top-form {
    display: flex;

    p {
      flex: 1 1 0;
    }
  }

  .lu-side-panel-top.lu-side-panel-wrapper.collapsed {
    display: inline-flex;
    flex-direction: row;
    z-index: 100;
    max-width: unset;
    width: unset;
    float: right;
    border-left: none;

    header {
      display: flex;
      flex-direction: row;
      max-width: unset;
      margin-bottom: 0;
    }

    .gap {
      margin-top: unset;
      margin-left: 1em;
    }

    div.lu-adder {
      margin-top: 0;

      &.once .lu-search {
        left: -1.2em;
      }

      &.once::before {
        content: '';
        top: -10px;
        left: -2.5em;
        right: -15em;
        bottom: -3em;
        position: absolute;
      }
    }
  }
}
